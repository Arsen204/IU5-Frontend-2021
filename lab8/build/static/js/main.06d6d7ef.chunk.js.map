{"version":3,"sources":["components/AddButton/AddButton.js","components/Todo/img/cross.svg","components/Todo/img/pencil.svg","components/Todo/Todo.js","components/TodoList/TodoList.js","App.jsx","reportWebVitals.js","index.js"],"names":["Button","onClick","type","className","Todo","crossClick","deleteFunc","todo","Name","useState","text","setText","handleEdit","e","editBtn","currentTarget","id","slice","index","indexOf","label","document","querySelector","textarea","classList","toggle","contains","value","focus","window","innerWidth","htmlFor","onKeyPress","key","button","rows","wrap","src","pencil_svg","alt","cross_svg","TodoList","setTodo","exampleArr","i","push","handleDelete","deleteTodo","splice","map","el","length","includes","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.06d6d7ef.chunk.js","sourcesContent":["import React from 'react';\nimport './AddButton.css'\n\nexport default function Button({onClick}) {\n    return (\n        <button onClick={onClick} type=\"button\" className=\"add-btn\">Add todo</button>\n    );\n}","export default __webpack_public_path__ + \"static/media/cross.cde85847.svg\";","export default __webpack_public_path__ + \"static/media/pencil.64859011.svg\";","import React, { useState } from 'react';\nimport './Todo.css'\nimport cross_svg from './img/cross.svg'\nimport pencil_svg from './img/pencil.svg'\n\nexport default function Todo({crossClick, deleteFunc, todo, Name}) {\n    const [text, setText] = useState(Name);\n\n    const handleEdit = (e) => {\n        let editBtn = (e.type === 'click') ? e.currentTarget : e;\n        let id = editBtn.id.slice(0, 5);\n        const index = todo.indexOf(id);\n        let label = document.querySelector('#' + todo[index] + '+ label > span.check--label-text');\n        let textarea = document.querySelector('#' + todo[index] + '+ label > .edit-label-text');\n        editBtn.classList.toggle('editable');\n\n        if (editBtn.classList.contains('editable')) {\n            textarea.value = text;\n            label.classList.toggle('check--label-text-display');\n            textarea.classList.toggle('edit-label-text-display');\n            textarea.focus();\n        } else if (textarea.value === \"\") {\n            deleteFunc(id);\n        } else {\n            if (window.innerWidth < 320) {\n                setText(textarea.value.slice(0, 10));\n            } else if (window.innerWidth < 570) {\n                setText(textarea.value.slice(0, 15));\n            } else {\n                setText(textarea.value.slice(0, 25));\n            }\n            label.classList.toggle('check--label-text-display');\n            textarea.classList.toggle('edit-label-text-display');\n        }\n    };\n\n    const enterHandler = (e) => {\n        if (e.key === 'Enter') {\n            let button = document.querySelector('#' + Name + 'a' + ' + button');\n            handleEdit(button);\n        }\n    };\n\n    return (\n        <li className=\"list-item\">\n        <input type=\"checkbox\" className=\"hidden-box\" id={Name}/>\n        <label htmlFor={Name} className=\"check--label\">\n            <span className=\"check--label-box\"></span>\n            <span className=\"check--label-text\">{text}</span>\n            <textarea className=\"edit-label-text\" onKeyPress={enterHandler} id={Name + 'a'} rows=\"1\" wrap=\"off\"></textarea>\n            <button onClick={handleEdit} id={Name + 'p'} type=\"button\" className=\"change-btn\">\n                    <img src={pencil_svg} className=\"svg-pencil\" alt=\"edit\"></img>\n            </button>\n            <button onClick={crossClick} id={Name + 'c'} type=\"button\" className=\"delete-btn\">\n                    <img src={cross_svg} className=\"svg-cross\" alt=\"cross\"></img>\n            </button>\n        </label>\n    </li>\n    );\n}","import React, { useState } from 'react';\nimport './TodoList.css';\nimport Button from '../AddButton/AddButton'\nimport Todo from '../Todo/Todo'\n\nexport default function TodoList() {\n    const [todo, setTodo] = useState([]);\n\n    const SIZE = 8;\n\n    const exampleArr = [];\n    for (let i = 0; i < SIZE; i++) {\n        exampleArr.push(\"Task\" + (i + 1));\n    }\n    \n    const handleAdd = () => {\n        if (todo.length < SIZE) {\n            let i = 0;\n            for (i = 0; i < SIZE; i++) {\n                if (!todo.includes(exampleArr[i])) {\n                    break;\n                }\n            }\n            setTodo([...todo, \"Task\" + (i + 1)]);\n        }\n    };\n\n    const handleDelete = (e) => {\n        let id = e.currentTarget.id.slice(0, 5);\n        deleteTodo(id);\n    };\n\n    const deleteTodo = (id) => {\n        const index = todo.indexOf(id);\n        todo.splice(index, 1);\n        setTodo([...todo]);\n    };\n\n    return (\n        <div className=\"TodoList-container\">\n            <ul className=\"TodoList\">\n                {todo.map((el) => (<Todo key={el} crossClick={handleDelete} deleteFunc={deleteTodo} todo={todo} Name={el}/>))}\n            </ul>\n            <Button onClick={handleAdd}/>\n        </div>\n    );\n}","import React from 'react';\nimport TodoList from './components/TodoList/TodoList'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <p className=\"title\">My todos</p>\n      <TodoList></TodoList>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}